name: C99 GitHub Commit Build

on:
  # Triggers the workflow on push or pull request events, but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install OpenSSL Development Libraries
        # These packages provide the necessary headers and libraries (-lssl, -lcrypto)
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev libssl3

      - name: Compile C Code
        # Compile the C code with GCC/Clang (Ubuntu default is usually GCC).
        # -std=c99: Enforce C99 standard as specified in the source file.
        # -Wall -Wextra: Enable common warnings.
        # -lssl -lcrypto: Link with the OpenSSL libraries.
        # Note: The C code uses POSIX sockets which are generally available on Linux without an extra flag.
        run: |
          gcc -std=c99 commit.c -o commit -Wall -Wextra -lssl -lcrypto

      - name: Test Compiled Executable (Simulated Run)
        # Verify the executable was created.
        # Since the actual run requires a real GITHUB_TOKEN and network connection,
        # we'll just check if the executable runs and immediately fails as expected
        # due to the placeholder token "YOUR_GITHUB_PERSONAL_ACCESS_TOKEN".
        # We also pass the token as an environment variable just for demonstration,
        # although the check is hardcoded in the C file to fail on the placeholder.
        run: |
          echo "Attempting a simulated run to check for successful linking and placeholder token check..."
          # The exit code is expected to be non-zero (EXIT_FAILURE) because the placeholder token is used.
          ./commit || echo "Test passed: Executable failed with expected exit code (due to placeholder token)."
        env:
          GITHUB_TOKEN: "YOUR_GITHUB_PERSONAL_ACCESS_TOKEN" # Explicitly use the placeholder token

      - name: Store Executable as Artifact (Optional)
        # Upload the compiled binary as a workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: commit-linux
          path: commit
          retention-days: 7